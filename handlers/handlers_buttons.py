from telegram import InlineKeyboardButton
from handlers.rewrite_utils import publish_video, generate_subtitles, insert_clips
from handlers.utils import send_message


def handle_user_choice(chat_id, text, video_path):
    if text in ["1", "1Ô∏è‚É£ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"]:
        publish_video(chat_id, video_path)
    elif text in ["2", "2Ô∏è‚É£ –°—É–±—Ç–∏—Ç—Ä—ã"]:
        generate_subtitles(chat_id, video_path)
    elif text in ["3", "3Ô∏è‚É£ –í—Å—Ç–∞–≤–∫–∏"]:
        insert_clips(chat_id, video_path)
    elif text in ["4", "4Ô∏è‚É£ –í—Å—ë —Å—Ä–∞–∑—É"]:
        generate_subtitles(chat_id, video_path)
        insert_clips(chat_id, video_path)
        publish_video(chat_id, video_path)
    else:
        send_message(chat_id, "‚ùì –ù–µ –ø–æ–Ω—è–ª –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —Ü–∏—Ñ—Ä—ã –æ—Ç 1 –¥–æ 4.")


def send_story_action_buttons(chat_id):
    keyboard = [
        [
            InlineKeyboardButton("üé¨ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å", callback_data="story_process_one"),
            InlineKeyboardButton("üîó –°–æ–µ–¥–∏–Ω–∏—Ç—å 2 –∏ –±–æ–ª–µ–µ", callback_data="story_merge")
        ],
        [
            InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤–æ–µ", callback_data="story_publish_ready")
        ]
    ]
    reply_markup = {
        "inline_keyboard": [[btn.to_dict() for btn in row] for row in keyboard]
    }
    
    import requests
    from os import getenv
    bot_token = getenv("BOT_TOKEN")
    requests.post(f"https://api.telegram.org/bot{bot_token}/sendMessage", json={
        "chat_id": chat_id,
        "text": "üìö –û—Ç–ª–∏—á–Ω–æ! –í—ã–±–µ—Ä–∏, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å –≤–∏–¥–µ–æ üëá",
        "reply_markup": reply_markup
    })


def handle_story_action_callback(chat_id, query_data):
    if query_data == "story_process_one":
        send_message(chat_id, "üé¨ –û–∫–µ–π! –û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        from handlers.state import user_states
        user_states[chat_id] = {"mode": "stories_processing"}

    elif query_data == "story_merge":
        send_message(chat_id, "üîó –•–æ—Ä–æ—à–æ! –û—Ç–ø—Ä–∞–≤—å 2 –∏–ª–∏ –±–æ–ª—å—à–µ –≤–∏–¥–µ–æ –ø–æ–¥—Ä—è–¥.")
        from handlers.state import user_states
        user_states[chat_id] = {"mode": "stories_multiple"}

    elif query_data == "story_publish_ready":
        keyboard = [
            [
                InlineKeyboardButton("üì∏ –§–æ—Ç–æ", callback_data="publish_photo"),
                InlineKeyboardButton("üé• –í–∏–¥–µ–æ", callback_data="publish_video")
            ]
        ]
        reply_markup = {
            "inline_keyboard": [[btn.to_dict() for btn in row] for row in keyboard]
        }
        from os import getenv
        import requests
        bot_token = getenv("BOT_TOKEN")
        requests.post(f"https://api.telegram.org/bot{bot_token}/sendMessage", json={
            "chat_id": chat_id,
            "text": "üì§ –ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å?",
            "reply_markup": reply_markup
        })
        from handlers.state import user_states
        user_states[chat_id] = {"mode": "publish_ready"}

    else:
        send_message(chat_id, "‚ùì –ù–µ –ø–æ–Ω—è–ª –≤—ã–±–æ—Ä.")
