import requests
import os
from handlers.state import user_states
from handlers.handlers_voice import handle_voice_transcription
from handlers.handlers_rewrite import handle_rewrite_text
from handlers.handlers_gpt_keywords import extract_keywords_from_text
from handlers.handlers_pexels import get_pexels_clips
from handlers.handlers_capcut_api import create_reels_from_template
from handlers.handlers_subtitles import generate_subtitles
from handlers.handlers_publish import publish_reels
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

BOT_TOKEN = os.environ.get('BOT_TOKEN')
TELEGRAM_API_URL = f'https://api.telegram.org/bot{BOT_TOKEN}/sendMessage'


def handle_capcut(chat_id):
    text = (
        "üé¨ –û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ, —Å—Å—ã–ª–∫—É –Ω–∞ Reels –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ –∏–ª–∏ YouTube-—Å—Å—ã–ª–∫—É.\n\n"
        "–Ø —Å–¥–µ–ª–∞—é –≤—Å—ë —Å–∞–º: —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è ‚Üí —Ä–µ—Ä–∞–π—Ç ‚Üí –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ‚Üí –≤–∏–¥–µ–æ –∏–∑ Pexels ‚Üí —à–∞–±–ª–æ–Ω CapCut ‚Üí —Å—É–±—Ç–∏—Ç—Ä—ã ‚Üí –ø—É–±–ª–∏–∫–∞—Ü–∏—è üî•"
    )
    requests.post(f"{TELEGRAM_API_URL}", json={
        'chat_id': chat_id,
        'text': text
    })
    user_states[chat_id] = {'mode': 'capcut_generation'}


def process_capcut_pipeline(chat_id, input_data):
    try:
        # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∏–¥–µ–æ
        video_path = download_video(input_data)

        # 2. –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è
        transcript = transcribe_video(video_path, chat_id)

        # 3. –†–µ—Ä–∞–π—Ç
        rewritten_text = handle_rewrite_text(chat_id, transcript)

        # 4. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        keywords = extract_keywords_from_text(rewritten_text)

        # 5. –ü–æ–∏—Å–∫ –≤–∏–¥–µ–æ—Ñ—É—Ç–∞–∂–µ–π
        pexels_clips = get_pexels_clips(keywords)

        # 6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ CapCut
        final_video_url = create_reels_from_template(chat_id, pexels_clips, rewritten_text)

        # 7. –°—É–±—Ç–∏—Ç—Ä—ã
        generate_subtitles(chat_id, rewritten_text, final_video_url)

        # 8. –ü—É–±–ª–∏–∫–∞—Ü–∏—è
        publish_reels(chat_id, final_video_url)

        # –£—Å–ø–µ—à–Ω—ã–π —Ñ–∏–Ω–∞–ª
        keyboard = [
            [InlineKeyboardButton("üåü –í—Å—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å", callback_data='success')],
            [InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data='menu')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard).to_dict()

        requests.post(f"{TELEGRAM_API_URL}", json={
            'chat_id': chat_id,
            'text': f"üéâ –ì–æ—Ç–æ–≤–æ! –¢–≤–æ–π Reels —Å–æ–±—Ä–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!",
            'reply_markup': reply_markup
        })

    except Exception as e:
        requests.post(f"{TELEGRAM_API_URL}", json={
            'chat_id': chat_id,
            'text': f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Reels: {e}"
        })


# === TO DO: —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ/—Ñ–∞–π–ª—É ===
def download_video(input_data):
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å Telegram, YouTube –∏–ª–∏ Instagram
    # –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ yt_dlp –∏–ª–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑ message['video']
    return "/tmp/video.mp4"  # –∑–∞–≥–ª—É—à–∫–∞
