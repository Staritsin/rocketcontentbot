import os
import requests
from telegram import InlineKeyboardButton
import handlers.state as state
from handlers.telegram_webhook_fix import ask_for_rating

BOT_TOKEN = os.environ.get('BOT_TOKEN')
OPENAI_API_KEY = os.environ.get('OPENAI_API_KEY')

TELEGRAM_API_URL = f'https://api.telegram.org/bot{BOT_TOKEN}/sendMessage'


def handle_rewrite(chat_id):
    text = (
        "‚úçÔ∏è –†–µ—Ä–∞–π—Ç —Ç–µ–∫—Å—Ç–∞\n"
        "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç, –∏ —è –ø–µ—Ä–µ–ø–∏—à—É –µ–≥–æ ‚Äî —Å–¥–µ–ª–∞—é –±–æ–ª–µ–µ —Ü–µ–ø–ª—è—é—â–∏–º, –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º –∏–ª–∏ –∞–¥–∞–ø—Ç–∏—Ä—É—é –ø–æ–¥ —Å–æ—Ü—Å–µ—Ç–∏."
    )
    requests.post(TELEGRAM_API_URL, json={
        'chat_id': chat_id,
        'text': text
    })


def handle_rewrite_transcript(chat_id):
    try:
        last_text = state.user_states.get(chat_id, {}).get('last_transcript')
        if not last_text:
            raise ValueError("–¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ä–µ—Ä–∞–π—Ç–∞")

        prompt = f"–°–¥–µ–ª–∞–π —Ä–µ—Ä–∞–π—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏–≤ —Å–º—ã—Å–ª –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É:\n\n{last_text}"
        response = requests.post(
            "https://api.openai.com/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {OPENAI_API_KEY}",
                "Content-Type": "application/json"
            },
            json={
                "model": "gpt-3.5-turbo",
                "messages": [
                    {"role": "system", "content": "–¢—ã –æ–ø—ã—Ç–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä."},
                    {"role": "user", "content": prompt}
                ]
            }
        )

        result = response.json()
        rewritten = result['choices'][0]['message']['content']

        # –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º
        user_states[chat_id]['last_transcript'] = rewritten

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        requests.post(TELEGRAM_API_URL, json={
            'chat_id': chat_id,
            'text': f"‚úçÔ∏è –†–µ—Ä–∞–π—Ç:\n{rewritten}"
        })

        # –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Ä–µ—Ä–∞–π—Ç–∞
        keyboard = [
            [InlineKeyboardButton("üì§ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –ø–æ—Å—Ç", callback_data='use_as_post')],
            [InlineKeyboardButton("üé¨ –°–¥–µ–ª–∞—Ç—å Reels", callback_data='make_reels')],
            [InlineKeyboardButton("üåü –í—Å—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å", callback_data='success')],
            [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='menu')]
        ]
        reply_markup = {
            'inline_keyboard': [[btn.to_dict() for btn in row] for row in keyboard]
        }

        requests.post(TELEGRAM_API_URL, json={
            'chat_id': chat_id,
            'text': "–ß—Ç–æ –¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ? üëá",
            'reply_markup': reply_markup
        })

        # –æ—Ü–µ–Ω–∫–∞
        ask_for_rating(chat_id)

    except Exception as e:
        requests.post(TELEGRAM_API_URL, json={
            'chat_id': chat_id,
            'text': f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ—Ä–∞–π—Ç–∞: {e}"
        })
