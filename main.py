from flask import Flask, request, jsonify
import requests
import yt_dlp
import re
import os
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from handlers.handlers_video import handle_video

app = Flask(__name__)
BOT_TOKEN = os.environ.get('BOT_TOKEN')
OPENAI_API_KEY = os.environ.get('OPENAI_API_KEY')
TELEGRAM_API_URL = f'https://api.telegram.org/bot{BOT_TOKEN}/sendMessage'
TELEGRAM_FILE_API = f'https://api.telegram.org/file/bot{BOT_TOKEN}/'

@app.route('/')
def index():
    return '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!'

@app.route('/telegram', methods=['POST'])
def telegram_webhook():
    data = request.get_json()

    if 'message' in data:
        chat_id = data['message']['chat']['id']
        message = data['message']

        if 'text' in message:
            text = message['text']

            if text.lower() == '/start':
                reply = (
                    "–ü—Ä–∏–≤–µ—Ç! üëã –Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º! üéØ\n\n"
                    "–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:\n"
                    "üé• –†–∞–±–æ—Ç–∞—é —Å –≤–∏–¥–µ–æ: Reels, YouTube, Shorts, Telegram, VK\n"
                    "üß† –†–∞–±–æ—Ç–∞—é —Å –≥–æ–ª–æ—Å–æ–º: –ø—Ä–µ–≤—Ä–∞—â–∞—é –≤ —Ç–µ–∫—Å—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ –∏ –∞—É–¥–∏–æ\n"
                    "‚úçÔ∏è –†–∞–±–æ—Ç–∞—é —Å —Ç–µ–∫—Å—Ç–æ–º: —Ä–µ—Ä–∞–π—Ç, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è, —Å—Ü–µ–Ω–∞—Ä–∏–∏\n"
                    "üñº –†–∞–±–æ—Ç–∞—é —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: —Å–æ–∑–¥–∞—é –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É\n"
                    "üìÖ –ü–æ–º–æ–≥–∞—é —Å –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω–æ–º\n"
                    "üì≤ –ú–æ–≥—É —Å–æ–∑–¥–∞—Ç—å Reels –ø–æ —Å—Å—ã–ª–∫–µ/–≤–∏–¥–µ–æ: —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è, —Ä–µ—Ä–∞–π—Ç, —Å—É–±—Ç–∏—Ç—Ä—ã, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è, –æ–±–ª–æ–∂–∫–∞ –∏ –ø–æ—Å—Ç–∏–Ω–≥\n\n"
                    "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ –º–Ω–æ–π:\n"
                    "1. –ù–∞–∂–º–∏ /menu, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å.\n"
                    "2. –ó–∞–≥—Ä—É–∑–∏ –≤–∏–¥–µ–æ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
                    "3. –Ø –æ–±—Ä–∞–±–æ—Ç–∞—é –º–∞—Ç–µ—Ä–∏–∞–ª –∏ –ø—Ä–µ–¥–ª–æ–∂—É –≤–∞—Ä–∏–∞–Ω—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.\n\n"
                    "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –ñ–º–∏ /menu üòä"
                )
                send_message(chat_id, reply)

            elif text.lower() == '/menu':
                keyboard = [
                    [
                        InlineKeyboardButton("üé¨ –†–∞–±–æ—Ç–∞ —Å –≤–∏–¥–µ–æ", callback_data='video'),
                        InlineKeyboardButton("üéß –†–∞–±–æ—Ç–∞ —Å –≥–æ–ª–æ—Å–æ–º", callback_data='voice')
                    ],
                    [
                        InlineKeyboardButton("‚úçÔ∏è –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º", callback_data='text'),
                        InlineKeyboardButton("üñº –†–∞–±–æ—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏", callback_data='image')
                    ],
                    [
                        InlineKeyboardButton("üìÖ –ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω", callback_data='plan'),
                        InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data='pay')
                    ],
                    [
                        InlineKeyboardButton("üì≤ –°–æ–∑–¥–∞—Ç—å Reels –ø–æ –≤–∏–¥–µ–æ/—Å—Å—ã–ª–∫–µ", callback_data='smart_reels')
                    ],
                    [
                        InlineKeyboardButton("üõ† –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data='support')
                    ]
                ]
                reply_markup = {'inline_keyboard': [[btn.to_dict() for btn in row] for row in keyboard]}

                requests.post(TELEGRAM_API_URL, json={
                    'chat_id': chat_id,
                    'text': '–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å? –í—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá',
                    'reply_markup': reply_markup
                })

    elif 'callback_query' in data:
        callback = data['callback_query']
        chat_id = callback['message']['chat']['id']
        query_data = callback['data']
        callback_id = callback['id']

        # –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è Telegram)
        requests.post(f"https://api.telegram.org/bot{BOT_TOKEN}/answerCallbackQuery", json={
            'callback_query_id': callback_id
        })

        if query_data == 'video':
            handle_video(chat_id)
        elif query_data == 'voice':
            send_message(chat_id, "üéß –†–∞–±–æ—Ç–∞ —Å –≥–æ–ª–æ—Å–æ–º\n–û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî —è –ø—Ä–µ–≤—Ä–∞—â—É –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç.")
        elif query_data == 'text':
            send_message(chat_id, "‚úçÔ∏è –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, —Ä–µ—Ä–∞–π—Ç–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è.")
        elif query_data == 'image':
            send_message(chat_id, "üñº –†–∞–±–æ—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏\n–ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å, –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É.")
        elif query_data == 'plan':
            send_message(chat_id, "üìÖ –ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–º–∞—Ç–∏–∫—É, –∏ —è –ø–æ–º–æ–≥—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø—É–±–ª–∏–∫–∞—Ü–∏–π.")
        elif query_data == 'pay':
            send_message(chat_id, "üí≥ –û–ø–ª–∞—Ç–∞\n–û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ: https://yourpaymentpage.com")
        elif query_data == 'support':
            send_message(chat_id, "üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞\n–ù–∞–ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @rocketcontent_supportbot")
        elif query_data == 'smart_reels':
            send_message(chat_id, "üì≤ –£–º–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ Reels\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Å—Å—ã–ª–∫—É. –Ø —Å–¥–µ–ª–∞—é: —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é, —Ä–µ—Ä–∞–π—Ç, —Å—É–±—Ç–∏—Ç—Ä—ã, –≤–∏–¥–µ–æ –∏–∑ —à–∞–±–ª–æ–Ω–∞, –æ–±–ª–æ–∂–∫—É –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—é.\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", )

            keyboard = [
                [
                    InlineKeyboardButton("üî§ –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è", callback_data='transcribe'),
                    InlineKeyboardButton("‚úçÔ∏è –†–µ—Ä–∞–π—Ç", callback_data='rewrite')
                ],
                [
                    InlineKeyboardButton("üß© –í–∏–¥–µ–æ –∏–∑ —à–∞–±–ª–æ–Ω–∞ CapCut", callback_data='capcut'),
                    InlineKeyboardButton("üéû –°—É–±—Ç–∏—Ç—Ä—ã", callback_data='subtitles')
                ],
                [
                    InlineKeyboardButton("üñº –û–±–ª–æ–∂–∫–∞", callback_data='thumbnail'),
                    InlineKeyboardButton("üì§ –ü–æ—Å—Ç–∏–Ω–≥", callback_data='publish')
                ]
            ]

            reply_markup = {'inline_keyboard': [[btn.to_dict() for btn in row] for row in keyboard]}

            requests.post(TELEGRAM_API_URL, json={
                'chat_id': chat_id,
                'text': '–í—ã–±–µ—Ä–∏, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å –≤–∏–¥–µ–æ üëá',
                'reply_markup': reply_markup
            })

    return jsonify(success=True)

def send_message(chat_id, text):
    requests.post(TELEGRAM_API_URL, json={
        'chat_id': chat_id,
        'text': text
    })

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)
